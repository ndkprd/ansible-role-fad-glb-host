- name: Set fact for GLB Host for {{ host.name }}
  ansible.builtin.set_fact:
    fad_api_endpoint_glb_hosts: https://{{ ansible_host }}/api/global_load_balance_host?vdom={{ fad_vdom }}&mkey={{ host.name }}
    fad_glb_host_name: "{{ host.name }}"
  delegate_to: localhost
  tags:
    - fad_glb_hosts

- name: Print out the GLB Hosts REST API endpoint for {{ fad_glb_host_name }}
  ansible.builtin.debug:
    msg: "Current endpoint: {{ fad_api_endpoint_glb_hosts }}"
  tags:
    - fad_glb_hosts
    - debug

- name: Get the existing value of GLB Host data or {{ fad_glb_host_name }}
  ansible.builtin.uri:
    method: GET
    url: "{{ fad_api_endpoint_glb_hosts }}"
    body_format: "{{ fad_api_uri_params.body_format }}"
    validate_certs: "{{ fad_api_uri_params.validate_certs }}"
    return_content: "{{ fad_api_uri_params.return_content }}"
    status_code: "{{ fad_api_uri_params.status_code }}"
    headers: "{{ fad_api_header }}"
  register: fad_glb_host_existing_data
  delegate_to: localhost
  tags:
    - fad_glb_hosts

- name: Print out the existing value of GLB Host data ({{ fad_glb_host_name }}).
  ansible.builtin.debug:
    var: fad_glb_host_existing_data.json.payload
  delegate_to: localhost
  tags:
    - fad_glb_hosts
    - debug

# - name: Write GLB Hosts request body json tmp file ({{ fad_glb_host_name }}).
#   ansible.builtin.copy:
#     content: |
#       {
#         "mkey": "{{ host.name }}",
#         "default-feedback-ip": "{{ host.default_ipv4 }}",
#         "default-feedback-ip6": "{{ host.default_ipv6 }}",
#         "host-name": "{{ host.hostname }}",
#         "domain-name": "{{ host.domain }}",
#         "fortiview": "{{ host.fortiview }}",
#         "load-balance-method": "{{ host.load_balance_method }}",
#         "persistence": "{{ host.persistence }}",
#         "respond-single-record": "{{ host.respond_single_record }}"
#       }
#     dest: "/tmp/fad_glb_host_{{ host.name }}_request_body.json"
#     mode: u+rw,g-rw,o-rw
#   register: request_body
#   delegate_to: localhost
#   run_once: true
#   tags:
#     - fad_glb_hosts

- name: Write the GLB Host request body json for {{ fad_glb_host_name }}
  ansible.builtin.set_fact:
    request_body: |
      {
        "mkey": "{{ host.name }}",
        "default-feedback-ip": "{{ host.default_ipv4 }}",
        "default-feedback-ip6": "{{ host.default_ipv6 }}",
        "host-name": "{{ host.hostname }}",
        "domain-name": "{{ host.domain }}",
        "fortiview": "{{ host.fortiview }}",
        "load-balance-method": "{{ host.load_balance_method }}",
        "persistence": "{{ host.persistence }}",
        "respond-single-record": "{{ host.respond_single_record }}"
      }
  tags:
    - fad_glb_hosts

- name: Print out the request body json for {{ fad_glb_host_name }}
  ansible.builtin.debug:
    var: request_body
  tags:
    - fad_glb_hosts
    - debug

- name: Create new GLB Host entry if entry don't exists yet for {{ fad_glb_host_name }}
  ansible.builtin.uri:
    method: POST
    url: "{{ fad_api_endpoint_glb_hosts }}"
    body_format: "{{ fad_api_uri_params.body_format }}"
    validate_certs: "{{ fad_api_uri_params.validate_certs }}"
    return_content: "{{ fad_api_uri_params.return_content }}"
    status_code: "{{ fad_api_uri_params.status_code }}"
    headers: "{{ fad_api_header }}"
    body: "{{ request_body }}"
  register: fad_glb_host_post_result
  when: fad_glb_host_existing_data.json.payload.mkey is undefined
  delegate_to: localhost
  changed_when: "fad_glb_host_post_result.json.payload == 0"
  failed_when: "fad_glb_host_post_result.json.payload != -15 and fad_glb_host_post_result.json.payload != 0"
  tags:
    - fad_glb_hosts

- name: Update the GLB Host entry if the entry already exist and idempotent check failed for {{ fad_glb_host_name }}
  ansible.builtin.uri:
    method: PUT
    url: "{{ fad_api_endpoint_glb_hosts }}"
    body_format: "{{ fad_api_uri_params.body_format }}"
    validate_certs: "{{ fad_api_uri_params.validate_certs }}"
    return_content: "{{ fad_api_uri_params.return_content }}"
    status_code: "{{ fad_api_uri_params.status_code }}"
    headers: "{{ fad_api_header }}"
    body: "{{ request_body }}"
  register: fad_glb_host_put_result
  delegate_to: localhost
  when: >
    (fad_glb_host_existing_data.json.payload['mkey'] is defined) and
    (fad_glb_host_existing_data.json.payload['default-feedback-ip'] != host.default_ipv4 or
    fad_glb_host_existing_data.json.payload['default-feedback-ip6'] != host.default_ipv6 or
    fad_glb_host_existing_data.json.payload['host-name'] != host.hostname or
    fad_glb_host_existing_data.json.payload['domain-name'] != host.domain or
    fad_glb_host_existing_data.json.payload['fortiview'] != host.fortiview or
    fad_glb_host_existing_data.json.payload['load-balance-method'] != host.load_balance_method or
    fad_glb_host_existing_data.json.payload['persistence'] != host.persistence or
    fad_glb_host_existing_data.json.payload['respond-single-record'] != host.respond_single_record)
  failed_when: "fad_glb_host_put_result.json.payload != -15 and fad_glb_host_put_result.json.payload != 0"
  tags:
    - fad_glb_hosts

- name: Include the GLB Host VSP Lists task {{ fad_glb_host_name }}
  ansible.builtin.include_tasks: add_glb_hosts_vsp_lists.yaml
  loop: "{{ host.vsp_lists }}"
  loop_control:
    loop_var: vsp_list
  tags:
    - fad_glb_hosts

- name: Check if the data have changed for {{ fad_glb_host_name }}
  ansible.builtin.uri:
    method: GET
    url: "{{ fad_api_endpoint_glb_hosts }}"
    body_format: "{{ fad_api_uri_params.body_format }}"
    validate_certs: "{{ fad_api_uri_params.validate_certs }}"
    return_content: "{{ fad_api_uri_params.return_content }}"
    status_code: "{{ fad_api_uri_params.status_code }}"
    headers: "{{ fad_api_header }}"
  register: fad_glb_host_new_data
  changed_when: "fad_glb_host_new_data.json.payload != fad_glb_host_existing_data.json.payload"
  delegate_to: localhost
  tags:
    - fad_glb_hosts

- name: Print out the new value of GLB Host data for {{ fad_glb_host_name }}
  ansible.builtin.debug:
    var: fad_glb_host_new_data.json.payload
  delegate_to: localhost
  tags:
    - fad_glb_hosts
    - debug

- name: Try to resolve the GLB Host against Google for {{ host.hostname }}.{{ host.domain }}
  ansible.builtin.include_tasks: test_dns_result.yaml
  tags:
    - fad_glb_hosts