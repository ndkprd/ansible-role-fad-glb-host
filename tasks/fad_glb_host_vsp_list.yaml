---

- name: Print out the GLB Host VSP List existing values.
  ansible.builtin.debug:
    msg: >
      {{ (lookup('url', fad_glb_host_vsp_list_api_endpoint
      % (glb_host.0.name | default(glb_host.hostname + '.' + glb_host.domain), glb_host.1.name), validate_certs=false, split_lines=false,
      headers=fad_api_header) | from_json).get('payload') }}
  loop: "{{ fad_glb_hosts | subelements('vsp_lists') }}"
  loop_control:
    loop_var: glb_host
    label: "{{ glb_host.0.name | default(glb_host.hostname + '.' + glb_host.domain) + ' to ' + glb_host.1.pool_name }}"
  tags: [debug]

- name: Create new GLB Host VSP List entry if it's not found.
  ansible.builtin.uri:
    method: POST
    url: "{{ fad_glb_host_vsp_list_api_endpoint | format(glb_host.0.name | default(glb_host.hostname + '.' + glb_host.domain), glb_host.1.name) }}"
    body_format: "{{ fad_api_uri_params.body_format }}"
    validate_certs: "{{ fad_api_uri_params.validate_certs }}"
    return_content: "{{ fad_api_uri_params.return_content }}"
    status_code: "{{ fad_api_uri_params.status_code }}"
    headers: "{{ fad_api_header }}"
    body: |
      {
        "mkey": "{{ glb_host.1.name | string }}",
        "isp": "{{ glb_host.1.isp | default('') }}",
        "topology": "{{ glb_host.1.topology | default('') }}",
        "virtual-server-pool": "{{ glb_host.1.pool_name }}",
        "weight": "{{ glb_host.1.weight | default('100') | string }}"
      }
  register: fad_glb_host_vsp_list_post_results
  loop: "{{ fad_glb_hosts | subelements('vsp_lists') }}"
  loop_control:
    loop_var: glb_host
    label: "{{ glb_host.0.name | default(glb_host.hostname + '.' + glb_host.domain) + ' to ' + glb_host.1.pool_name }}"
  when: >
    (lookup('url', fad_glb_host_vsp_list_api_endpoint
    % (glb_host.0.name | default(glb_host.hostname + '.' + glb_host.domain), glb_host.1.name),validate_certs=false, split_lines=false,
    headers=fad_api_header) | from_json).get('payload').mkey is undefined
  changed_when: "fad_glb_host_vsp_list_post_results.json.payload == 0"
  failed_when: "fad_glb_host_vsp_list_post_results.json.payload not in [0, -15]"

- name: Update GLB Host VSP List entry if it's exist and any of its value is changed.
  ansible.builtin.uri:
    method: PUT
    url: "{{ fad_glb_host_vsp_list_api_endpoint | format(glb_host.0.name | default(glb_host.hostname + '.' + glb_host.domain), glb_host.1.name) }}"
    body_format: "{{ fad_api_uri_params.body_format }}"
    validate_certs: "{{ fad_api_uri_params.validate_certs }}"
    return_content: "{{ fad_api_uri_params.return_content }}"
    status_code: "{{ fad_api_uri_params.status_code }}"
    headers: "{{ fad_api_header }}"
    body: |
      {
        "mkey": "{{ glb_host.1.name | string }}",
        "isp": "{{ glb_host.1.isp | default('') }}",
        "topology": "{{ glb_host.1.topology | default('') }}",
        "virtual-server-pool": "{{ glb_host.1.pool_name }}",
        "weight": "{{ glb_host.1.weight | default('100') | string }}"
      }
  register: fad_glb_host_vsp_list_put_results
  loop: "{{ fad_glb_hosts | subelements('vsp_lists') }}"
  loop_control:
    loop_var: glb_host
    label: "{{ glb_host.0.name | default(glb_host.hostname + '.' + glb_host.domain) + ' to ' + glb_host.1.pool_name }}"
  when: >
    ((lookup('url', fad_glb_host_vsp_list_api_endpoint
    % (glb_host.0.name | default(glb_host.hostname + '.' + glb_host.domain), glb_host.1.name),validate_certs=false, split_lines=false,
    headers=fad_api_header) | from_json).get('payload')['mkey'] is defined) and
    (
    (lookup('url', fad_glb_host_vsp_list_api_endpoint
    % (glb_host.0.name | default(glb_host.hostname + '.' + glb_host.domain), glb_host.1.name),validate_certs=false, split_lines=false,
    headers=fad_api_header) | from_json).get('payload')['isp'] != glb_host.1.isp | default('')  or
    (lookup('url', fad_glb_host_vsp_list_api_endpoint
    % (glb_host.0.name | default(glb_host.hostname + '.' + glb_host.domain), glb_host.1.name),validate_certs=false, split_lines=false,
    headers=fad_api_header) | from_json).get('payload')['topology'] != glb_host.1.topology | default('') or
    (lookup('url', fad_glb_host_vsp_list_api_endpoint
    % (glb_host.0.name | default(glb_host.hostname + '.' + glb_host.domain), glb_host.1.name),validate_certs=false, split_lines=false,
    headers=fad_api_header) | from_json).get('payload')['virtual-server-pool'] != glb_host.1.pool_name or
    (lookup('url', fad_glb_host_vsp_list_api_endpoint
    % (glb_host.0.name | default(glb_host.hostname + '.' + glb_host.domain), glb_host.1.name),validate_certs=false, split_lines=false,
    headers=fad_api_header) | from_json).get('payload')['weight'] != glb_host.1.weight | default ('100') | string
    )
  changed_when: "fad_glb_host_vsp_list_put_results.json.payload == 0"
  failed_when: "fad_glb_host_vsp_list_put_results.json.payload not in [0, -15]"

- name: Print out the GLB Host VSP List values after create/update task.
  ansible.builtin.debug:
    msg: >
      {{ (lookup('url', fad_glb_host_vsp_list_api_endpoint
      % (glb_host.0.name | default(glb_host.hostname + '.' + glb_host.domain), glb_host.1.name), validate_certs=false, split_lines=false,
      headers=fad_api_header) | from_json).get('payload') }}
  loop: "{{ fad_glb_hosts | subelements('vsp_lists') }}"
  loop_control:
    loop_var: glb_host
    label: "{{ glb_host.0.name | default(glb_host.hostname + '.' + glb_host.domain) + ' to ' + glb_host.1.pool_name }}"
  tags: [debug]
