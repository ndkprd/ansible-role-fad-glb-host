- name: Set fact for GLB Host FQDN ({{ item.scope }}_{{ item.hostname }}.{{ item.domain }}).
  ansible.builtin.set_fact:
    fad_glb_host_entry: "{{ item.scope }}_{{ item.hostname }}.{{ item.domain }}"
    fad_null: null
  delegate_to: localhost

- name: Get the existing value of GLB Host data ({{ fad_glb_host_entry }}).
  ansible.builtin.uri:
    method: GET
    url: "https://{{ ansible_host }}/api/global_load_balance_host?vdom={{ fad_vdom }}&mkey={{ fad_glb_host_entry }}"
    body_format: json
    validate_certs: false
    return_content: true
    status_code: 200
    headers:
      'Content-Type': 'application/json'
      'APITOKEN': '{{ fad_apitoken }}'
  register: fad_glb_host_existing_data
  delegate_to: localhost

- name: Print out the existing value of GLB Host data ({{ fad_glb_host_entry }}).
  ansible.builtin.debug:
    var: fad_glb_host_existing_data.json.payload
  delegate_to: localhost
  tags:
    - debug

- name: Write GLB host request body json tmp file ({{ fad_glb_host_entry }}).
  ansible.builtin.copy:
    content: |
      {
        "default-feedback-ip": "{{ item.default_ipv4 }}",
        "default-feedback-ip6": "::",
        "host-name": "{{ item.hostname }}",
        "domain-name": "{{ item.domain }}.",
        "fortiview": "enable",
        "load-balance-method": "",
        "mkey": "{{ fad_glb_host_entry }}",
        "persistence": "enable",
        "respond-single-record": "enable",
        "vs_pool_list": "",
        "vs_pool_list_count": ""
      }
    dest: "/tmp/fad_{{ fad_glb_host_entry }}_request_body.json"
    mode: u+rw,g-rw,o-rw
  register: fad_glb_host_request_body
  delegate_to: localhost
  run_once: true

- name: Trying to create new GLB Host entry ({{ fad_glb_host_entry }}).
  ansible.builtin.uri:
    method: POST
    url: "https://{{ ansible_host }}/api/global_load_balance_host?vdom={{ fad_vdom }}&mkey={{ fad_glb_host_entry }}"
    body_format: json
    validate_certs: false
    return_content: true
    status_code: 200
    headers:
      'Content-Type': 'application/json'
      'APITOKEN': '{{ fad_apitoken }}'
    body: "{{ lookup('ansible.builtin.file', fad_glb_host_request_body.dest) }}"
  register: fad_glb_host_post_result
  delegate_to: localhost
  changed_when: "fad_glb_host_post_result.json.payload == 0"
  failed_when: "fad_glb_host_post_result.json.payload != -15 and fad_glb_host_post_result.json.payload != 0"

- name: Update the GLB Host entry if the entry already exist ({{ fad_glb_host_entry }}).
  ansible.builtin.uri:
    method: PUT
    url: "https://{{ ansible_host }}/api/global_load_balance_host?vdom={{ fad_vdom }}&mkey={{ fad_glb_host_entry }}"
    body_format: json
    validate_certs: false
    return_content: true
    status_code: 200
    headers:
      'Content-Type': 'application/json'
      'APITOKEN': '{{ fad_apitoken }}'
    body: "{{ lookup('ansible.builtin.file', fad_glb_host_request_body.dest) }}"
  register: fad_glb_host_put_result
  delegate_to: localhost
  when: "fad_glb_host_post_result.json.payload == -15"
  failed_when: "fad_glb_host_put_result.json.payload != -15 and fad_glb_host_put_result.json.payload != 0"

- name: Include the GLB Host VS Pool children task ({{ fad_glb_host_entry }}).
  ansible.builtin.include_tasks: add_glb_host_vsp.yaml
  loop: "{{ item.vs_pool }}"
  loop_control:
    loop_var: item_vsp

- name: Check if the data have changed ({{ fad_glb_host_entry }}).
  ansible.builtin.uri:
    method: GET
    url: "https://{{ ansible_host }}/api/global_load_balance_host?vdom={{ fad_vdom }}&mkey={{ fad_glb_host_entry }}"
    body_format: json
    validate_certs: false
    return_content: true
    status_code: 200
    headers:
      'Content-Type': 'application/json'
      'APITOKEN': '{{ fad_apitoken }}'
  register: fad_glb_host_new_data
  changed_when: "fad_glb_host_new_data.json.payload != fad_glb_host_existing_data.json.payload"
  delegate_to: localhost

- name: Print out the new value of GLB Host data ({{ fad_glb_host_entry }}).
  ansible.builtin.debug:
    var: fad_glb_host_new_data.json.payload
  delegate_to: localhost
  tags:
    - debug
