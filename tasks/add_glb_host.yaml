- name: ({{ item.hostname }}.{{ item.domain }}) Get the existing value of GLB Host data.
  ansible.builtin.uri:
    method: GET
    url: "https://{{ ansible_host }}/api/global_load_balance_host?vdom={{ fad_vdom }}&mkey={{ item.scope }}_{{ item.hostname }}.{{ item.domain }}"
    body_format: json
    validate_certs: false
    return_content: yes
    status_code: 200
    headers:
      'Content-Type': 'application/json'
      'APITOKEN': '{{ fad_apitoken }}'
  register: fad_glb_host_existing_data
  delegate_to: localhost
  tags:
    - debug

- name: ({{ item.hostname }}.{{ item.domain }}) Print out the existing value of GLB Host data.
  ansible.builtin.debug:
    var: fad_glb_host_existing_data.json
  delegate_to: localhost
  tags:
    - debug

- name: ({{ item.hostname }}.{{ item.domain }}) Delete if data exists.
  ansible.builtin.uri:
    method: DELETE
    url: "https://{{ ansible_host }}/api/global_load_balance_host?vdom={{ fad_vdom }}&mkey={{ item.scope }}_{{ item.hostname }}.{{ item.domain }}"
    body_format: json
    validate_certs: false
    return_content: yes
    status_code: 200
    headers:
      'Content-Type': 'application/json'
      'APITOKEN': '{{ fad_apitoken }}'
  register: fad_glb_host_existing_data
  delegate_to: localhost
  when: "fad_glb_host_existing_data.json.payload != 'null'"
  tags:
    - debug

- name: ({{ item.hostname }}.{{ item.domain }}) Trying to create new GLB Host entry.
  ansible.builtin.uri:
    method: POST
    url: "https://{{ ansible_host }}/api/global_load_balance_host?vdom={{ fad_vdom }}"
    body_format: json
    validate_certs: false
    return_content: yes
    status_code: 200
    headers:
      'Content-Type': 'application/json'
      'APITOKEN': '{{ fad_apitoken }}'
    body: |
      {
        "default-feedback-ip": "{{ item.default_ipv4 }}",
        "default-feedback-ip6": "",
        "host-name": "{{ item.hostname }}",
        "domain-name": "{{ item.domain }}.",
        "fortiview": "enable",
        "load-balance-method": "",
        "mkey": "{{ item.scope }}_{{ item.hostname }}.{{ item.domain }}",
        "persistence": "enable",
        "respond-single-record": "enable",
        "vs_pool_list": [
        {% for pool in item.vs_pool %}
          {
            "mkey": "{{ pool.mkey }}",
            "virtual-server-pool": "{{ pool.pool_name }}"
          }{% if not loop.last %},{% endif %}
        {% endfor %}
        ],
        "vs_pool_list_count": ""
      }
  register: fad_glb_host_new_data
  delegate_to: localhost
  changed_when: "fad_glb_host_new_data.json.payload == 0"
  failed_when: "fad_glb_host_new_data.json.payload != -15 and fad_glb_host_new_data.json.payload != 0"
  #ignore_errors: yes
  
- name: ({{ item.hostname }}.{{ item.domain }}) Update the GLB Host entry.
  ansible.builtin.uri:
    method: PUT
    url: "https://{{ ansible_host }}/api/global_load_balance_host?vdom={{ fad_vdom }}&mkey={{ item.scope }}_{{ item.hostname }}.{{ item.domain }}"
    body_format: json
    validate_certs: false
    return_content: yes
    status_code: 200
    headers:
      'Content-Type': 'application/json'
      'APITOKEN': '{{ fad_apitoken }}'
    body: |
      {
        "default-feedback-ip": "{{ item.default_ipv4 }}",
        "default-feedback-ip6": "",
        "host-name": "{{ item.hostname }}",
        "domain-name": "{{ item.domain }}.",
        "fortiview": "enable",
        "load-balance-method": "",
        "mkey": "{{ item.scope }}_{{ item.hostname }}.{{ item.domain }}",
        "persistence": "enable",
        "respond-single-record": "enable",
        "vs_pool_list": [
        {% for pool in item.vs_pool %}
          {
            "mkey": "{{ pool.mkey }}",
            "virtual-server-pool": "{{ pool.pool_name }}"
          }{% if not loop.last %},{% endif %}
        {% endfor %}
        ],
        "vs_pool_list_count": ""
      }
  register: fad_glb_host_new_data
  delegate_to: localhost
  when: "fad_glb_host_new_data.json.payload == -15"
  changed_when: "fad_glb_host_new_data.json.payload == 0"
  failed_when: "fad_glb_host_new_data.json.payload != -15 and fad_glb_host_new_data.json.payload != 0"
  #ignore_errors: yes

- name: ({{ item.hostname }}.{{ item.domain }}) Get the new value of GLB Host data.
  ansible.builtin.uri:
    method: GET
    url: "https://{{ ansible_host }}/api/global_load_balance_host?vdom={{ fad_vdom }}&mkey={{ item.scope }}_{{ item.hostname }}.{{ item.domain }}"
    body_format: json
    validate_certs: false
    return_content: yes
    status_code: 200
    headers:
      'Content-Type': 'application/json'
      'APITOKEN': '{{ fad_apitoken }}'
  register: fad_glb_host_existing_data
  delegate_to: localhost
  tags:
    - debug

- name: ({{ item.hostname }}.{{ item.domain }}) Print out the new value of GLB Host data.
  ansible.builtin.debug:
    var: fad_glb_host_existing_data.json.payload
  delegate_to: localhost
  tags:
    - debug