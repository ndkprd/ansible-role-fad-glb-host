---

- name: Update/create FortiADC GLB Resources.
  hosts: all
  become: false
  gather_facts: false
  connection: local
  vars:
     # for testing-purpose only, to delete the created resources after. change to 'false' if you want the resource to stay.
    do_cleanup: true
    # global-load-balance data-center entries
    fad_glb_data_centers:
      - name: dc1.ndkprd.com
        location: ID
    # global-load-balance servers entries
    fad_glb_servers:
      - name: "dmz.dc1.ndkprd.com"
        data_center: "dc1.ndkprd.com"
        health_check_ctrl: enable
        health_check_list: "LB_HLTHCK_ICMP "
        health_check_relationship: OR
        server_type: Generic-Host
        auth_type: none
        address_type: ipv4 # FAD address type
        auto_sync: disable
        fad_ipv4: "0.0.0.0"
        fad_ipv6: "::"
        fad_pass: ""
        fad_port: "5858"
        server_members:
          - name: public-waf-1.dc1.ndkprd.com
            ipv4: 10.10.1.1
            ipv6: "::"
            address_type: ipv4
            gateway: ""
            health_check_ctrl: disable
            health_check_inherit: enable
            health_check_list: ""
            health_check_relationship: "OR"

    # global-load-balance virtual-server-pool entries
    fad_glb_vs_pools:
      - name: public-waf.dc1.ndkprd.com # VS Pools mkey
        check_server_status: enable # healthcheck
        check_virtual_server_existent: disable
        load_balance_method: wrr
        vs_pool_members:
          - id: 1001 # high number of ID for mkey
            is_backup: disable # if enable, when healthcheck failed it will goes to this server
            server: dmz.dc1.ndkprd.com # GLB Servers
            server_member_name: public-waf-1.dc1.ndkprd.com # GLB Servers member
            weight: 10
            weight: 100
    # global-load-balance hosts
    fad_glb_hosts:
      - name: public_repo.devops.ndkprd.com # GLB Host mkey
        hostname: repo001 # hostname without domain
        domain: devops.ndkprd.com # base domain without dot
        default_ipv4: "0.0.0.0" # default IP when none of virtual server work
        default_ipv6: "::"
        fortiview: disable
        load_balance_method: "weight"
        persistence: enable
        respond_single_record: enable
        dns_policy: "PUBLIC_DNS_POLICY" # valid DNS Policy mkey
        vsp_lists:
          - name: DC1 # vsp_list mkey
            pool_name: public-waf.dc1.ndkprd.com # existing pool name, MUST EXIST FIRST
            weight: "100" # VS pool weight
    # global-dns-server policy entries
    fad_dns_policies:
      - name: "PUBLIC_DNS_POLICY"
        source_address: "any"
        destination_address: "any"
        dns64_list: ""
        dnssec_validate_status: "disable"
        forward: "first"
        forwarders: ""
        recursion_status: "disable"
        rrlimit: ""
    # global-dns-server general
    fad_dns_general_settings:
      global_dns_mode: "enable"
      certificate: "Factory"
      dnssec_validate_status: "disable"
      doh_interface_list: ""
      doh_port: "80"
      doh_status: "disable"
      dohs_interface_list: ""
      dohs_port: "443"
      dohs_status: "disable"
      dot_interface_list: ""
      dot_port: "853"
      dot_status: "disable"
      forward: "first"
      forwarders: ""
      interface_list: ""
      ipv4_mode: "enable"
      ipv6_mode: "disable"
      listen_to_all_interface: "enable"
      recursion_status: "disable"
      response_ratelimit: ""
      traffic_log: "enable"
      use_system_dns_server: "enable"

  roles:
    - ndkprd.fad_glb_host

  tasks:
    - name: Clean up the created GLB Host resources.
      ansible.builtin.uri:
        method: DELETE
        url: "https://{{ ansible_host }}/api/global_load_balance_host?vdom={{ fad_vdom }}&mkey={{ item.name }}"
        body_format: "{{ fad_api_uri_params.body_format }}"
        validate_certs: "{{ fad_api_uri_params.validate_certs }}"
        return_content: "{{ fad_api_uri_params.return_content }}"
        status_code: "{{ fad_api_uri_params.status_code }}"
        headers: "{{ fad_api_header }}"
      when: is do_cleanup
      loop: "{{ fad_glb_hosts }}"
      loop_control:
        label: "{{ item.name }}"
      tags: [cleanup, fad_glb_host]

    - name: Clean up the created VS Pools resources.
      ansible.builtin.uri:
        method: DELETE
        url: "https://{{ ansible_host }}/api/global_load_balance_virtual_server_pool?vdom={{ fad_vdom }}&mkey={{ item.name }}"
        body_format: "{{ fad_api_uri_params.body_format }}"
        validate_certs: "{{ fad_api_uri_params.validate_certs }}"
        return_content: "{{ fad_api_uri_params.return_content }}"
        status_code: "{{ fad_api_uri_params.status_code }}"
        headers: "{{ fad_api_header }}"
      when: is do_cleanup
      loop: "{{ fad_glb_vs_pools }}"
      loop_control:
        label: "{{ item.name }}"
      tags: [cleanup, fad_glb_vs_pool]

    - name: Clean up the created Servers resources.
      ansible.builtin.uri:
        method: DELETE
        url: "https://{{ ansible_host }}/api/global_load_balance_servers?vdom={{ fad_vdom }}&mkey={{ item.name }}"
        body_format: "{{ fad_api_uri_params.body_format }}"
        validate_certs: "{{ fad_api_uri_params.validate_certs }}"
        return_content: "{{ fad_api_uri_params.return_content }}"
        status_code: "{{ fad_api_uri_params.status_code }}"
        headers: "{{ fad_api_header }}"
      when: is do_cleanup
      loop: "{{ fad_glb_servers }}"
      loop_control:
        label: "{{ item.name }}"
      tags: [cleanup, fad_glb_servers]

    - name: Clean up the created Data Centers resources.
      ansible.builtin.uri:
        method: DELETE
        url: "https://{{ ansible_host }}/api/global_load_balance_data_center?vdom={{ fad_vdom }}&mkey={{ item.name }}"
        body_format: "{{ fad_api_uri_params.body_format }}"
        validate_certs: "{{ fad_api_uri_params.validate_certs }}"
        return_content: "{{ fad_api_uri_params.return_content }}"
        status_code: "{{ fad_api_uri_params.status_code }}"
        headers: "{{ fad_api_header }}"
      when: is do_cleanup
      loop: "{{ fad_glb_data_centers }}"
      loop_control:
        label: "{{ item.name }}"
      tags: [cleanup, fad_glb_data_center]

